<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sse.scoreAnalysis.dao.StudentCourseMapper">
    <resultMap id="BaseResultMap" type="com.sse.scoreAnalysis.model.StudentCourse">
        <id column="collegeId" jdbcType="VARCHAR" property="collegeid"/>
        <id column="majorId" jdbcType="VARCHAR" property="majorid"/>
        <id column="courseId" jdbcType="VARCHAR" property="courseid"/>
        <id column="year" jdbcType="VARCHAR" property="year"/>
        <id column="term" jdbcType="INTEGER" property="term"/>
        <id column="studentId" jdbcType="VARCHAR" property="studentid"/>
        <result column="score" jdbcType="INTEGER" property="score"/>
        <result column="studentRank" jdbcType="INTEGER" property="studentrank"/>
        <result column="flag" jdbcType="INTEGER" property="flag"/>
        <result column="great" jdbcType="INTEGER" property="great"/>
        <result column="first" jdbcType="INTEGER" property="first"/>
        <result column="pass" jdbcType="INTEGER" property="pass"/>
        <result column="grade" jdbcType="VARCHAR" property="grade"/>
    </resultMap>
    <resultMap id="WithCourseMap" type="com.sse.scoreAnalysis.model.StudentCourse">
        <id column="collegeId" jdbcType="VARCHAR" property="collegeid"/>
        <id column="majorId" jdbcType="VARCHAR" property="majorid"/>
        <id column="courseId" jdbcType="VARCHAR" property="courseid"/>
        <id column="year" jdbcType="VARCHAR" property="year"/>
        <id column="term" jdbcType="INTEGER" property="term"/>
        <id column="studentId" jdbcType="VARCHAR" property="studentid"/>
        <result column="score" jdbcType="INTEGER" property="score"/>
        <result column="studentRank" jdbcType="INTEGER" property="studentrank"/>
        <result column="flag" jdbcType="INTEGER" property="flag"/>
        <result column="great" jdbcType="INTEGER" property="great"/>
        <result column="first" jdbcType="INTEGER" property="first"/>
        <result column="pass" jdbcType="INTEGER" property="pass"/>
        <result column="grade" jdbcType="VARCHAR" property="grade"/>
        <association property="course" javaType="com.sse.scoreAnalysis.model.Course">
            <!--c.courseId,c.courseName,c.courseType,c.credit,c.classHour-->
            <id column="courseId" property="courseid"/>
            <result column="courseName" property="coursename"/>
            <result column="courseType" property="coursetype"/>
            <result column="credit" property="credit"/>
            <result column="courseHour" property="coursehour"/>
        </association>
    </resultMap>
    <resultMap id="WithStudentMap" type="com.sse.scoreAnalysis.model.StudentCourse">
        <id column="collegeId" jdbcType="VARCHAR" property="collegeid"/>
        <id column="majorId" jdbcType="VARCHAR" property="majorid"/>
        <id column="courseId" jdbcType="VARCHAR" property="courseid"/>
        <id column="year" jdbcType="VARCHAR" property="year"/>
        <id column="term" jdbcType="INTEGER" property="term"/>
        <id column="studentId" jdbcType="VARCHAR" property="studentid"/>
        <result column="score" jdbcType="INTEGER" property="score"/>
        <result column="studentRank" jdbcType="INTEGER" property="studentrank"/>
        <result column="flag" jdbcType="INTEGER" property="flag"/>
        <result column="great" jdbcType="INTEGER" property="great"/>
        <result column="first" jdbcType="INTEGER" property="first"/>
        <result column="pass" jdbcType="INTEGER" property="pass"/>
        <result column="grade" jdbcType="VARCHAR" property="grade"/>
        <association property="student" javaType="com.sse.scoreAnalysis.model.Student">
            <id column="studentId" jdbcType="VARCHAR" property="studentid"/>
            <result column="password" jdbcType="VARCHAR" property="password"/>
            <result column="studentName" jdbcType="VARCHAR" property="studentname"/>
            <result column="studentRank" jdbcType="INTEGER" property="studentrank"/>
            <result column="failureSum" jdbcType="INTEGER" property="failuresum"/>
            <result column="weightScore" jdbcType="DOUBLE" property="weightscore"/>
            <result column="studentAscend" jdbcType="INTEGER" property="studentascend"/>
            <result column="classId" jdbcType="VARCHAR" property="classid"/>
        </association>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Example_Where_Clause_sc">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and sc.${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and sc.${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and sc.${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and sc.${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    collegeId, majorId, courseId, year, term, studentId, score, studentRank, flag, great,first,pass,grade
  </sql>
    <sql id="Column_List_With_Course">
    sc.collegeId, sc.majorId, sc.courseId, sc.year, sc.term, sc.studentId, sc.score, sc.studentRank, sc.flag, sc.great,sc.first,sc.pass,sc.grade,
    c.courseId,c.courseName,c.courseType,c.credit,c.classHour
  </sql>
    <sql id="Column_List_With_Student">
    sc.collegeId, sc.majorId, sc.courseId, sc.year, sc.term, sc.studentId, sc.score, sc.studentRank, sc.flag, sc.great,sc.first,sc.pass,sc.grade,
    s.studentId, s.studentName, s.studentRank, s.failureSum, s.weightScore,s.studentAscend,s.classId
  </sql>
    <sql id="YearTermList">
    year, term
  </sql>
    <!--List<StudentCourse> selectByExampleWithCourse(StudentCourseExample example);-->
    <!--StudentCourse selectByPrimaryKeWithCourse(StudentCourseKey key);-->
    <select id="selectByExampleWithCourse" parameterType="com.sse.scoreAnalysis.model.StudentCourseExample"
            resultMap="WithCourseMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Column_List_With_Course"/>
        from student_course sc
        left join course c on sc.`courseId`= c.`courseId`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause_sc"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExampleWithStudent" parameterType="com.sse.scoreAnalysis.model.StudentCourseExample"
            resultMap="WithStudentMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Column_List_With_Student"/>
        from student_course sc
        left join student s on sc.studentId=s.studentId
        <if test="_parameter != null">
            <include refid="Example_Where_Clause_sc"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.sse.scoreAnalysis.model.StudentCourseExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from student_course
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectYearTermByExample" parameterType="com.sse.scoreAnalysis.model.StudentCourseExample"
            resultMap="BaseResultMap">
        select distinct
        <include refid="YearTermList"/>
        from student_course
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectYearByExample" parameterType="com.sse.scoreAnalysis.model.StudentCourseExample"
            resultMap="BaseResultMap">
        select distinct year
        from student_course
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKeyWithCourse" parameterType="com.sse.scoreAnalysis.model.StudentCourseKey"
            resultMap="WithCourseMap">
        select
        <include refid="Column_List_With_Course"/>
        from student_course sc
        left join course c on sc.courseId= c.courseId
        where sc.collegeId = #{collegeid,jdbcType=VARCHAR}
        and sc.majorId = #{majorid,jdbcType=VARCHAR}
        and sc.courseId = #{courseid,jdbcType=VARCHAR}
        and sc.year = #{year,jdbcType=VARCHAR}
        and sc.term = #{term,jdbcType=INTEGER}
        and sc.studentId = #{studentid,jdbcType=VARCHAR}
    </select>
    <select id="selectByPrimaryKey" parameterType="com.sse.scoreAnalysis.model.StudentCourseKey"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from student_course
        where collegeId = #{collegeid,jdbcType=VARCHAR}
        and majorId = #{majorid,jdbcType=VARCHAR}
        and courseId = #{courseid,jdbcType=VARCHAR}
        and year = #{year,jdbcType=VARCHAR}
        and term = #{term,jdbcType=INTEGER}
        and studentId = #{studentid,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="com.sse.scoreAnalysis.model.StudentCourseKey">
    delete from student_course
    where collegeId = #{collegeid,jdbcType=VARCHAR}
      and majorId = #{majorid,jdbcType=VARCHAR}
      and courseId = #{courseid,jdbcType=VARCHAR}
      and year = #{year,jdbcType=VARCHAR}
      and term = #{term,jdbcType=INTEGER}
      and studentId = #{studentid,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.sse.scoreAnalysis.model.StudentCourseExample">
        delete from student_course
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.sse.scoreAnalysis.model.StudentCourse">
    insert into student_course (collegeId, majorId, courseId, 
      year, term, studentId, 
      score, studentRank, flag, 
      great)
    values (#{collegeid,jdbcType=VARCHAR}, #{majorid,jdbcType=VARCHAR}, #{courseid,jdbcType=VARCHAR}, 
      #{year,jdbcType=VARCHAR}, #{term,jdbcType=INTEGER}, #{studentid,jdbcType=VARCHAR}, 
      #{score,jdbcType=INTEGER}, #{studentrank,jdbcType=INTEGER}, #{flag,jdbcType=INTEGER}, 
      #{great,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.sse.scoreAnalysis.model.StudentCourse">
        insert into student_course
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="collegeid != null">
                collegeId,
            </if>
            <if test="majorid != null">
                majorId,
            </if>
            <if test="courseid != null">
                courseId,
            </if>
            <if test="year != null">
                year,
            </if>
            <if test="term != null">
                term,
            </if>
            <if test="studentid != null">
                studentId,
            </if>
            <if test="score != null">
                score,
            </if>
            <if test="studentrank != null">
                studentRank,
            </if>
            <if test="flag != null">
                flag,
            </if>
            <if test="great != null">
                great,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="collegeid != null">
                #{collegeid,jdbcType=VARCHAR},
            </if>
            <if test="majorid != null">
                #{majorid,jdbcType=VARCHAR},
            </if>
            <if test="courseid != null">
                #{courseid,jdbcType=VARCHAR},
            </if>
            <if test="year != null">
                #{year,jdbcType=VARCHAR},
            </if>
            <if test="term != null">
                #{term,jdbcType=INTEGER},
            </if>
            <if test="studentid != null">
                #{studentid,jdbcType=VARCHAR},
            </if>
            <if test="score != null">
                #{score,jdbcType=INTEGER},
            </if>
            <if test="studentrank != null">
                #{studentrank,jdbcType=INTEGER},
            </if>
            <if test="flag != null">
                #{flag,jdbcType=INTEGER},
            </if>
            <if test="great != null">
                #{great,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.sse.scoreAnalysis.model.StudentCourseExample"
            resultType="java.lang.Long">
        select count(*) from student_course
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update student_course
        <set>
            <if test="record.collegeid != null">
                collegeId = #{record.collegeid,jdbcType=VARCHAR},
            </if>
            <if test="record.majorid != null">
                majorId = #{record.majorid,jdbcType=VARCHAR},
            </if>
            <if test="record.courseid != null">
                courseId = #{record.courseid,jdbcType=VARCHAR},
            </if>
            <if test="record.year != null">
                year = #{record.year,jdbcType=VARCHAR},
            </if>
            <if test="record.term != null">
                term = #{record.term,jdbcType=INTEGER},
            </if>
            <if test="record.studentid != null">
                studentId = #{record.studentid,jdbcType=VARCHAR},
            </if>
            <if test="record.score != null">
                score = #{record.score,jdbcType=INTEGER},
            </if>
            <if test="record.studentrank != null">
                studentRank = #{record.studentrank,jdbcType=INTEGER},
            </if>
            <if test="record.flag != null">
                flag = #{record.flag,jdbcType=INTEGER},
            </if>
            <if test="record.great != null">
                great = #{record.great,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update student_course
        set collegeId = #{record.collegeid,jdbcType=VARCHAR},
        majorId = #{record.majorid,jdbcType=VARCHAR},
        courseId = #{record.courseid,jdbcType=VARCHAR},
        year = #{record.year,jdbcType=VARCHAR},
        term = #{record.term,jdbcType=INTEGER},
        studentId = #{record.studentid,jdbcType=VARCHAR},
        score = #{record.score,jdbcType=INTEGER},
        studentRank = #{record.studentrank,jdbcType=INTEGER},
        flag = #{record.flag,jdbcType=INTEGER},
        great = #{record.great,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.sse.scoreAnalysis.model.StudentCourse">
        update student_course
        <set>
            <if test="score != null">
                score = #{score,jdbcType=INTEGER},
            </if>
            <if test="studentrank != null">
                studentRank = #{studentrank,jdbcType=INTEGER},
            </if>
            <if test="flag != null">
                flag = #{flag,jdbcType=INTEGER},
            </if>
            <if test="great != null">
                great = #{great,jdbcType=INTEGER},
            </if>
        </set>
        where collegeId = #{collegeid,jdbcType=VARCHAR}
        and majorId = #{majorid,jdbcType=VARCHAR}
        and courseId = #{courseid,jdbcType=VARCHAR}
        and year = #{year,jdbcType=VARCHAR}
        and term = #{term,jdbcType=INTEGER}
        and studentId = #{studentid,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.sse.scoreAnalysis.model.StudentCourse">
    update student_course
    set score = #{score,jdbcType=INTEGER},
      studentRank = #{studentrank,jdbcType=INTEGER},
      flag = #{flag,jdbcType=INTEGER},
      great = #{great,jdbcType=INTEGER}
    where collegeId = #{collegeid,jdbcType=VARCHAR}
      and majorId = #{majorid,jdbcType=VARCHAR}
      and courseId = #{courseid,jdbcType=VARCHAR}
      and year = #{year,jdbcType=VARCHAR}
      and term = #{term,jdbcType=INTEGER}
      and studentId = #{studentid,jdbcType=VARCHAR}
  </update>
</mapper>